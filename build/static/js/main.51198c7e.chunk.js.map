{"version":3,"sources":["components/ToggleLanguage.tsx","components/IconRow.tsx","About.tsx","components/utils.tsx","components/BarChart.tsx","Data.tsx","components/MapContainer.tsx","Home.tsx","components/TimelinePanel.tsx","Timeline.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Header.module.css","components/BarChart.module.css","components/TimelinePanel.module.css","Timeline.module.css","components/IconRow.module.css"],"names":["ToggleLanguage","toggleCLick","togglefunction","togglebutton","document","getElementById","innerText","id","onClick","this","bind","props","togglelanguage","React","IconRow","className","styles","iconrow_container","href","alt","src","About","getMdDocuments","fetch","then","res","text","setState","markdown_sp","markdown_en","state","domainlang","nextProps","nextState","source","getColour","color_ref","filter","item","color","BarChart","ref","containerdims","d3","barchartcontainer","node","getBoundingClientRect","margin","width","height","y","range","padding","x","svg","current","attr","append","domain","lengthdata","d","length","map","selectAll","data","enter","transition","duration","delay","i","bandwidth","call","style","Data","console","log","updatetime","MapContainer","adjustGeoJSON","feature","lng","geometry","coordinates","lat","coords","line_data","features","recent_points","Map","center","zoom","zoomControl","TileLayer","url","attribution","line","Polyline","key","properties","positions","onMouseOver","e","target","openPopup","onMouseOut","closePopup","Popup","point","CircleMarker","radius","stroke","fill","fillColor","fillOpacity","summary","Home","Timeline","focus","events","n","eventdata","defineEventData","constructPlot","constructLine","constructPoints","constructTraceLine","getTraceLineData","placeTextAnnotation","placeTextTitle","remove","totaldistance","Math","max","apply","distance","relative_distance","plot_extent","min_x","max_x","timings","setTimeout","linedata","timeConverter","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","getSeconds","toString","padStart","text_annotation","dt_unix","distance_text","relative_point","animation_duration","ease","path","datum","totalLength","getTotalLength","panelcontainer","svgelement","defineMenuItems","handler","value","timelinecontainer","menucontainer","options","onChange","placeholder","Header","pageheader","to","exact","App","toggleLanguage","lang","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.51198c7e.chunk.js","sourcesContent":["import * as React from \"react\";\n\ntype TLProps = {\n  togglelanguage: object\n}\n\nexport default class ToggleLanguage extends React.Component<TLProps> {\n\n  toggleCLick = function(togglefunction: any): void{\n\n    var togglebutton: HTMLElement = document.getElementById('languagetoggle')!;\n\n    if (togglebutton.innerText == 'English'){\n\n      togglefunction('EN')\n\n      togglebutton.innerText = 'Español'\n\n    }else if (togglebutton.innerText == 'Español'){\n\n      togglefunction('SP')\n\n      //not toggling back to english?\n      togglebutton.innerText = 'English'\n    }\n\n  }\n\n  render() {\n    return(\n      <button id=\"languagetoggle\" onClick={ this.toggleCLick.bind(null,this.props.togglelanguage) }>Español</button>\n    )\n  }\n\n}\n","import * as React from \"react\";\n\nimport styles from './IconRow.module.css'\n\nexport default class IconRow extends React.Component {\n  render() {\n    return(\n      <div className={ styles.iconrow_container }>\n        <ul>\n          <li>\n            <a href=\"https://www.galapagos.org/conservation/our-work/tortoise-restoration/\">\n               <img alt=\"icon_GTRI\" src=\"./espanola_tortoise_release/icon_GTRI.png\"></img>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.galapagos.gob.ec/en/national-park/\">\n              <img alt=\"icon_PN\" src=\"./espanola_tortoise_release/icon_PNG.png\"></img>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.galapagos.org/\">\n              <img alt=\"icon_GC\" src=\"./espanola_tortoise_release/icon_GC.png\"></img>\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport IconRow from './components/IconRow'\n\ninterface AboutProps {\n  domainlang: string\n  markdown_en?: string\n  markdown_sp?: string\n}\n\ninterface AboutState {\n  domainlang?: string\n  markdown_en: any\n  markdown_sp: any\n}\n\nexport default class About extends React.Component<AboutProps, AboutState> {\n\n  constructor(props: Readonly<AboutProps>){\n\n    super(props)\n    this.state = {\n      domainlang: this.props.domainlang,\n      markdown_en: '',\n      markdown_sp: ''\n    };\n\n  }\n\n  shouldComponentUpdate(nextProps: Readonly<AboutProps>, nextState: Readonly<AboutState>) {\n\n    if (this.props.domainlang !== nextProps.domainlang || (this.state.markdown_en == '' && nextState.markdown_en != '')) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  componentWillReceiveProps(nextProps: Readonly<AboutProps>) {\n    this.setState({ domainlang: nextProps.domainlang });\n  }\n\n  getMdDocuments = function (this: any) {\n\n    fetch('./espanola_tortoise_release/about_text_sp.md').then(res => res.text()).then(text => this.setState({ markdown_sp: text }));\n\n    fetch('./espanola_tortoise_release/about_text_en.md').then(res => res.text()).then(text => this.setState({ markdown_en: text }));\n\n  }\n\n  //need to get text to wait until promise has resolved - loading until\n  render() {\n\n        if (this.state.markdown_en == ''){\n          this.getMdDocuments()\n        }\n\n        const { markdown_en } = this.state;\n        const { markdown_sp } = this.state;\n\n        if (this.props.domainlang == 'SP'){\n          return(\n            <div className = \"aboutcontainer\">\n              <ReactMarkdown source = { markdown_sp }/>\n              <IconRow/>\n              <p>Sitio web por Hamish Gibbs. Para informar un problema con este sitio, visite la página de <a href=\"https://github.com/hamishgibbs/espanola_tortoise_release/issues/new\">GitHub</a>.</p>\n            </div>\n          );\n        }else{\n          return(\n          <div className = \"aboutcontainer\">\n            <ReactMarkdown source = { markdown_en }/>\n            <IconRow/>\n            <p>Website by Hamish Gibbs. To report a problem with this site, visit the <a href=\"https://github.com/hamishgibbs/espanola_tortoise_release/issues/new\">GitHub</a> page.</p>\n          </div>\n          );\n        }\n    }\n}\n","export default function getColour(id: string, color_ref: any): undefined|string{\n\n    color_ref = color_ref.filter(function(item: any) {\n\n      return item[0].id == id;\n    });\n\n    return(color_ref[0][0].color);\n};\n","import * as React from \"react\";\n\nimport * as d3 from 'd3'\n\nimport getColour from './utils'\n\nimport lengthdata from '../json/length_summary.json'\nimport color_ref from '../json/color_ref.json'\n\nimport styles from './BarChart.module.css'\n\ninterface BCProps {\n  width: number,\n  height: number,\n  domainlang: string\n}\n\nexport default class BarChart extends React.Component<BCProps, {}> {\n\n  private ref = React.createRef<SVGSVGElement>()\n\n  componentDidMount() {\n\n    //@ts-ignore\n    var containerelement: HTMLElement = d3.select('.' + styles.barchartcontainer).node()\n    var containerdims: DOMRect = containerelement.getBoundingClientRect()\n\n    var margin = {top: 20, right: 20, bottom: 40, left: 90},\n        width = containerdims.width - margin.left - margin.right,\n        height = containerdims.height - margin.top - margin.bottom;\n\n    var y = d3.scaleBand()\n          .range([height, 0])\n          .padding(0.1);\n\n    var x = d3.scaleLinear()\n          .range([0, width]);\n\n    var svg = d3.select(this.ref.current)\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    //@ts-ignore\n    x.domain([0, d3.max(lengthdata, function(d){ return d.length; })])\n    y.domain(lengthdata.map(function(d) { return d.id; }));\n\n    svg.selectAll(\".bar\")\n      .data(lengthdata)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      //@ts-ignore\n      .attr(\"y\", function(d) { return y(d.id); })\n      //@ts-ignore\n      .attr(\"id\", function(d) { return y(d.id); })\n      .attr(\"width\", function(d) {return 0; } )\n      .transition()\n      .duration(750)\n      .delay(function (d, i) {\n                    return i * 12;\n                })\n      .attr(\"width\", function(d) {return x(d.length); } )\n      .attr(\"height\", y.bandwidth())\n      //@ts-ignore\n      .attr(\"fill\", function(d) { return getColour(d.id, color_ref); })\n\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(d3.axisLeft(y))\n\n    svg.append(\"text\")\n      .attr('class', 'charttitle')\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 0 - (margin.left - 5))\n      .attr(\"x\",0 - (height / 2))\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Tortoise\");\n\n    svg.append(\"text\")\n      .attr('class', 'charttitle')\n      .attr(\"transform\",\n            \"translate(\" + (width/2) + \" ,\" +\n                           (height + margin.top + 20) + \")\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Distance (km)\");\n  }\n\n  render() {\n\n    return(\n      <div className = { styles.barchartcontainer }>\n        <svg ref={this.ref}/>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport updatetime from './json/update_time.json'\n\nimport BarChart from './components/BarChart'\n\ninterface DataProps {\n  domainlang: string\n}\n\nexport default class Data extends React.Component<DataProps, {}> {\n  render() {\n\n    console.log(updatetime)\n    //<p>Site updated + {updatetime[0].time} </p>\n    return(\n      <div>\n        <BarChart domainlang = { this.props.domainlang } width = { 500 } height = { 500 }/>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Map, Polyline, CircleMarker, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon, GeoJSON } from \"leaflet\";\nimport getColour from './utils'\n\nimport color_ref from '../json/color_ref.json'\nimport line_data from '../json/lines.json'\nimport recent_points from '../json/most_recent_points.json'\n\nimport Header from './Header'\n\nimport styles from './MapContainer.module.css'\n\nexport default class MapContainer extends React.Component<{}, {}> {\n\n  adjustGeoJSON = function(feature: any): any{\n\n    var lng: Array<number> = feature.geometry.coordinates.map(function(item: any){return(item[0])})\n    var lat: Array<number> = feature.geometry.coordinates.map(function(item: any){return(item[1])})\n\n    var coords: any = []\n    var i;\n    for (i = 0; i < lng.length; i++) {\n      coords[i] = [lat[i], lng[i]]\n    }\n\n    feature.geometry.coordinates = coords\n\n    return(feature)\n\n  }\n\n\n  render() {\n\n    console.log(line_data)\n\n    //adjust coordinates of line data\n    line_data.features.map(this.adjustGeoJSON)\n    console.log(recent_points[0].lat)\n\n    return(\n      <Map center={[-1.371844, -89.685379]} zoom={14} zoomControl={ false }>\n        <TileLayer\n          url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        { line_data.features.map((line: any) => (\n          <Polyline key = { line.properties.id } positions = { line.geometry.coordinates }\n          color = { getColour(line.properties.id, color_ref) }\n          onMouseOver={(e: any) => { e.target.openPopup(); }}\n          onMouseOut={(e: any) => {e.target.closePopup();}}>\n            <Popup>{ line.properties.id }</Popup>\n          </Polyline>\n        )) }\n        { recent_points.map((point: any) => (\n          <CircleMarker center = { [point.lat, point.lng] } radius = { 4 } stroke = { false }\n          fill = { true } fillColor = \"#00872E\" fillOpacity = { 0.5 }\n          onMouseOver={(e: any) => { e.target.openPopup();}}\n          onMouseOut={(e: any) => {e.target.closePopup();}}>\n            <Popup>{ point.summary }</Popup>\n          </CircleMarker>\n        ))}\n      </Map>\n    );\n  }\n}\n","import * as React from \"react\";\nimport MapContainer from './components/MapContainer'\n\nexport default class Home extends React.Component<{}> {\n  render() {\n      return(\n          <div>\n            <MapContainer/>\n          </div>\n      );\n    };\n}\n","import * as React from \"react\";\nimport * as d3 from 'd3'\n\nimport styles from './TimelinePanel.module.css'\n\nimport events from '../json/events.json'\n\ninterface TPProps {\n  focus: string\n  domainlang: string\n}\n\nexport default class Timeline extends React.Component<TPProps, {}> {\n  private ref = React.createRef<SVGSVGElement>()\n\n  defineEventData(focus: string){\n    var events_filter: any = events.filter(function (i: any,n: any){\n        return(i.id===focus);\n    });\n\n    return(events_filter)\n\n  }\n\n  //define prelim plot here and move to componentWillReceiveProps/componentWillUpdate\n  componentDidMount() {\n    var svg = this.ref.current\n\n    //@ts-ignore\n    var containerelement: HTMLElement = d3.select(svg).node()\n    var containerdims: DOMRect = containerelement.getBoundingClientRect()\n\n    var eventdata = this.defineEventData(this.props.focus)\n\n    this.constructPlot(this.props.domainlang, svg, containerdims, eventdata, this.constructLine, this.constructPoints, this.constructTraceLine, this.getTraceLineData, this.placeTextAnnotation, this.placeTextTitle)\n\n  }\n\n  componentDidUpdate() {\n\n    var svg = this.ref.current\n\n    d3.select(this.ref.current).selectAll('g').remove()\n\n    //@ts-ignore\n    var containerelement: HTMLElement = d3.select(svg).node()\n    var containerdims: DOMRect = containerelement.getBoundingClientRect()\n\n    var eventdata = this.defineEventData(this.props.focus)\n\n    this.constructPlot(this.props.domainlang, svg, containerdims, eventdata, this.constructLine, this.constructPoints, this.constructTraceLine, this.getTraceLineData, this.placeTextAnnotation, this.placeTextTitle)\n\n  }\n\n  constructPlot(domainlang: string, svg: any, containerdims:any, eventdata: any, constructLine: object, constructPoints: object, constructTraceLine: object, getTraceLineData: object, placeTextAnnotation: object, placeTextTitle: object){\n\n    var totaldistance = Math.max.apply(Math, eventdata.map(function(x: any){return(x.distance);}))\n\n    var relative_distance = eventdata.map(function(x: any){return(x.distance / totaldistance);})\n\n    var plot_extent = {\n      min_x: containerdims.width * 0.05,\n      max_x: containerdims.width * 0.95\n    }\n\n    //need non-cumulative distance also\n    var animation_duration = 3000\n\n    var timings = relative_distance.map(function(x: any){return(x * animation_duration);})\n\n    relative_distance = relative_distance.map(function(x: any){return((containerdims.width * 0.05) + (x * (containerdims.width * 0.9)));})\n\n    //@ts-ignore\n    constructLine(svg, containerdims, plot_extent, eventdata, animation_duration)\n\n\n    //@ts-ignore\n    placeTextTitle(svg, plot_extent, eventdata)\n\n    //for loop here to time all in relation to top line\n    //add text anotation - transition opacity]\n    //add dotted line\n    //add timeout with the correct timings\n    var i;\n    for (let i = 0; i < relative_distance.length; i++) {\n      setTimeout(() => {\n        //@ts-ignore\n        var linedata = getTraceLineData(relative_distance[i], i, plot_extent)\n\n        //@ts-ignore\n        constructPoints(svg, containerdims, relative_distance[i])\n\n        //@ts-ignore\n        constructTraceLine(svg, containerdims, relative_distance, linedata)\n\n        //@ts-ignore\n        placeTextAnnotation(svg, plot_extent, eventdata, i, 2000, domainlang)\n      }, timings[i]);\n\n    }\n\n    //@ts-ignore\n    //constructTraceLine(svg, containerdims, relative_distance, linedata)\n\n  }\n\n  placeTextTitle(svg: any, plot_extent: any, eventdata: any){\n    d3.select(svg)\n      .append('g')\n      .append('text')\n      .attr('y', 60)\n      .attr('x', plot_extent['max_x'] / 2)\n      .text(eventdata[0].id)\n      .attr('opacity', 0)\n      .attr('font-size', '25px')\n      .attr('font-weight', 'bold')\n      .transition()\n      .duration(500)\n      .attr('opacity', 1);\n  }\n\n  placeTextAnnotation(svg: any, plot_extent: any, eventdata: any, n: number, delay: number, domainlang: string){\n    function timeConverter(UNIX_timestamp: number){\n      var a = new Date(UNIX_timestamp * 1000);\n      var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n      var year = a.getFullYear();\n      var month = months[a.getMonth()];\n      var date = a.getDate();\n      var hour = a.getHours();\n      var min = a.getMinutes();\n      var sec = a.getSeconds();\n      var time = date + ' ' + month + ', ' + year + ' ' + hour.toString().padStart(2, '0') + ':' + min.toString().padStart(2, '0');\n      return time;\n    }\n\n    if (domainlang === 'SP'){\n        var text_annotation = timeConverter(eventdata[n].dt_unix) + ' – viajó ' + eventdata[n].distance_text + '.'\n    }else{\n        var text_annotation = timeConverter(eventdata[n].dt_unix) + ' – travelled ' + eventdata[n].distance_text + '.'\n    }\n\n    d3.select(svg)\n      .append('g')\n      .append('text')\n      .attr('y', 255 + (n + 1) * 40)\n      .attr('x', plot_extent['min_x'] + 30)\n      .attr('font-size', '12px')\n      .text(text_annotation)\n      .attr('opacity', 0)\n      .transition()\n      .duration(500)\n      .delay(delay)\n      .attr('opacity', 1);\n\n  }\n\n  constructPoints(svg: any, containerdims: any, relative_point: number){\n    d3.select(svg)\n      .append('g')\n      .append(\"circle\")\n       .attr(\"cx\", relative_point)\n       .attr(\"cy\", 150)\n       .attr(\"r\", 0)\n       .style(\"fill\", \"white\")\n       .attr(\"stroke\", \"black\")\n       .attr(\"stroke-width\", 1)\n      .transition()\n      .duration(400)\n      .attr('r', 5);\n  }\n\n  constructLine(svg: any, containerdims: any, plot_extent: any, eventdata: any, animation_duration: number){\n\n    d3.select(svg)\n      .append('g')\n       .append(\"line\")\n       .attr(\"y1\", 150)\n       .attr(\"x1\", plot_extent['min_x'])\n       .attr(\"x2\", plot_extent['min_x'])\n       .attr(\"y2\", 150)\n       .attr(\"fill\", \"none\")\n       .attr(\"stroke\", \"black\")\n       .attr(\"stroke-width\", 2)\n       .transition()\n       .duration(animation_duration)\n       .ease(d3.easeLinear)\n       .attr(\"x2\", plot_extent['max_x']);\n\n  }\n\n  getTraceLineData(relative_point: any, n: number, plot_extent: any){\n\n    var text_space = 40\n\n    var linedata = [[relative_point, 160], [relative_point, 250], [plot_extent['min_x'], 250], [plot_extent['min_x'], 250 + (n + 1) * text_space], [plot_extent['min_x'] + 15, 250 + (n + 1) * text_space]]\n    return(linedata);\n\n  }\n\n  constructTraceLine(svg: any, containerdims: any, plot_extent: any, linedata: any){\n\n    var path = d3.select(svg).append('g')\n      .append(\"path\")\n      .datum(linedata)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"lightgrey\")\n      .attr(\"stroke-width\", 1)\n      //@ts-ignore\n      .attr(\"d\", d3.line()\n        .x(function(d) { return d[0] })\n        .y(function(d) { return d[1] })\n        )\n\n\n    //@ts-ignore\n    var totalLength = path.node().getTotalLength();\n\n    path\n      .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n      .attr(\"stroke-dashoffset\", totalLength)\n      .transition()\n        .duration(2000)\n        .ease(d3.easeLinear)\n        .attr(\"stroke-dashoffset\", 0);\n\n  }\n\n  render(){\n\n    var focus = this.props.focus\n\n    var eventdata = this.defineEventData(this.props.focus)\n\n    var n: number = eventdata.length\n\n    return(\n      <div className={ styles.panelcontainer } style={{ height: 250 + (n * 50) }}>\n        <svg className={ styles.svgelement } ref={this.ref}/>\n      </div>\n    )\n  }\n}\n","import * as React from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport TimelinePanel from './components/TimelinePanel'\n\nimport linedata from './json/lines.json'\n\nimport styles from './Timeline.module.css'\n\ninterface TimelineProps {\n  domainlang: string\n}\n\ninterface TimelineState {\n  focus: string\n}\n\nexport default class Timeline extends React.Component<TimelineProps, TimelineState> {\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      focus: this.defineMenuItems()[0]\n    };\n\n    this.handler = this.handler.bind(this)\n\n  }\n\n  defineMenuItems = function(): Array<string> {\n    return(linedata.features.map(function(x){return(x.properties.id);}));\n  }\n\n  handler(e: any) {\n\n    this.setState({\n      focus: e.value\n    })\n\n  }\n\n  render () {\n\n    console.log(this.state)\n\n    return(\n      <div className= { styles.timelinecontainer }>\n        <div className={ styles.menucontainer }>\n          <Dropdown options = { this.defineMenuItems() } onChange={ this.handler } placeholder=\"Selection\"/>\n        </div>\n        <TimelinePanel focus={ this.state.focus } domainlang={ this.props.domainlang }/>\n      </div>\n    )\n\n  }\n}\n","import * as React from \"react\";\nimport styles from './Header.module.css'\nimport ToggleLanguage from './ToggleLanguage';\nimport App from '../App'\nimport About from '../About'\nimport Data from '../Data'\nimport Home from '../Home'\nimport Timeline from '../Timeline'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\ntype HeaderProps = {\n  domainlang: string\n\ttogglelanguage: object\n}\n\nexport default class Header extends React.Component<HeaderProps> {\n\n\trender() {\n\n\t\t\t\tif (this.props.domainlang == 'SP'){\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t<div>\n                <div>\n\t\t\t\t\t\t\t\t<nav>\n\t\t\t\t\t\t\t\t\t<ul className={ styles.pageheader }>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/espanola_tortoise_release\">Las Tortugas</Link>\n\t\t\t\t\t\t\t\t\t</li>\n                  <li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/data\">Data</Link>\n\t\t\t\t\t\t\t\t\t</li>\n                  <li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/timeline\">Cronograma</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/about\">Información</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li><ToggleLanguage togglelanguage = { this.props.togglelanguage }/></li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</nav>\n                </div>\n\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/espanola_tortoise_release\">\n\t\t\t\t\t\t\t\t\t\t<Home/>\n\t\t\t\t\t\t\t\t\t</Route>\n                  <Route path=\"/data\">\n\t\t\t\t\t\t\t\t\t\t<Data domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n                  <Route path=\"/timeline\">\n\t\t\t\t\t\t\t\t\t\t<Timeline domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t\t\t\t\t<About domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}else{\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<nav>\n\t\t\t\t\t\t\t\t\t<ul className={styles.pageheader}>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/espanola_tortoise_release\">The Tortoises</Link>\n\t\t\t\t\t\t\t\t\t</li>\n                  <li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/data\">Data</Link>\n\t\t\t\t\t\t\t\t\t</li>\n                  <li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/timeline\">Timeline</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/about\">About</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li><ToggleLanguage togglelanguage = { this.props.togglelanguage }/></li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/espanola_tortoise_release\">\n\t\t\t\t\t\t\t\t\t\t<Home/>\n\t\t\t\t\t\t\t\t\t</Route>\n                  <Route path=\"/data\">\n                    <Data domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n                  <Route path=\"/timeline\">\n\t\t\t\t\t\t\t\t\t\t<Timeline domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t\t\t\t\t<About domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport About from './About'\n\n//Add routing\ntype DomainState = {\n  domainlang: string\n}\n\nexport default class App extends React.Component {\n\n  state = { domainlang: 'EN' }\n\n  toggleLanguage = function(this: any, lang: string): void {\n\n    if(lang == 'SP'){\n      lang = 'SP'\n    }else{\n      lang = 'EN'\n    }\n\n    this.setState({\n      domainlang: lang\n    })\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header domainlang = { this.state.domainlang } togglelanguage = { this.toggleLanguage.bind(this) }/>\n      </div>\n    );\n  }\n}\n\n\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagecontainer\":\"Header_pagecontainer__1RbSp\",\"pageheader\":\"Header_pageheader__2qM6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barchartcontainer\":\"BarChart_barchartcontainer__3BwQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelcontainer\":\"TimelinePanel_panelcontainer__2DOPW\",\"svgelement\":\"TimelinePanel_svgelement__2NaND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timelinecontainer\":\"Timeline_timelinecontainer__19GBO\",\"menucontainer\":\"Timeline_menucontainer__1-pe6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconrow_container\":\"IconRow_iconrow_container__3EDw6\"};"],"sourceRoot":""}