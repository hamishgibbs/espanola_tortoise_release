{"version":3,"sources":["components/ToggleLanguage.tsx","components/IconRow.tsx","About.tsx","components/utils.tsx","components/BarChart.tsx","Data.tsx","components/MapContainer.tsx","Home.tsx","components/TimelinePanel.tsx","Timeline.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx","Timeline.module.css","components/BarChart.module.css","components/Header.module.css","components/TimelinePanel.module.css","components/IconRow.module.css"],"names":["ToggleLanguage","toggleCLick","togglefunction","togglebutton","document","getElementById","innerText","id","onClick","this","bind","props","togglelanguage","React","IconRow","className","styles","iconrow_container","href","alt","src","About","getMdDocuments","fetch","then","res","text","setState","markdown_sp","markdown_en","state","domainlang","nextProps","nextState","source","getColour","color_ref","filter","item","color","BarChart","ref","containerdims","d3","barchartcontainer","node","getBoundingClientRect","margin","top","right","bottom","left","width","height","svg","current","createBarChart","lengthdata","addAxisTitles","console","log","remove","append","attr","style","y","range","padding","x","domain","d","length","map","selectAll","data","enter","transition","duration","delay","i","bandwidth","call","Data","MapContainer","adjustGeoJSON","feature","lng","geometry","coordinates","Math","min","apply","lat","max","coords","line_data","features","Map","center","zoom","zoomControl","TileLayer","url","attribution","line","Polyline","key","properties","positions","onMouseOver","e","target","openPopup","onMouseOut","closePopup","Popup","recent_points","point","CircleMarker","radius","stroke","fill","fillColor","fillOpacity","summary","Home","Timeline","focus","events","n","eventdata","defineEventData","constructPlot","constructLine","constructPoints","constructTraceLine","getTraceLineData","placeTextAnnotation","placeTextTitle","totaldistance","distance","relative_distance","plot_extent","min_x","max_x","timings","setTimeout","linedata","timeConverter","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","getMinutes","getSeconds","toString","padStart","text_annotation","dt_unix","distance_text","relative_point","animation_duration","ease","path","datum","totalLength","getTotalLength","panelcontainer","svgelement","defineMenuItems","handler","value","timelinecontainer","menucontainer","options","onChange","placeholder","Header","pageheader","to","exact","App","toggleLanguage","lang","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.8c08e782.chunk.js","sourcesContent":["import * as React from \"react\";\n\ntype TLProps = {\n  togglelanguage: object\n}\n\nexport default class ToggleLanguage extends React.Component<TLProps> {\n\n  toggleCLick = function(togglefunction: any): void{\n\n    var togglebutton: HTMLElement = document.getElementById('languagetoggle')!;\n\n    if (togglebutton.innerText == 'English'){\n\n      togglefunction('EN')\n\n      togglebutton.innerText = 'Español'\n\n    }else if (togglebutton.innerText == 'Español'){\n\n      togglefunction('SP')\n\n      //not toggling back to english?\n      togglebutton.innerText = 'English'\n    }\n\n  }\n\n  render() {\n    return(\n      <button id=\"languagetoggle\" onClick={ this.toggleCLick.bind(null,this.props.togglelanguage) }>Español</button>\n    )\n  }\n\n}\n","import * as React from \"react\";\n\nimport styles from './IconRow.module.css'\n\nexport default class IconRow extends React.Component {\n  render() {\n    return(\n      <div className={ styles.iconrow_container }>\n        <ul>\n          <li>\n            <a href=\"https://www.galapagos.org/conservation/our-work/tortoise-restoration/\">\n               <img alt=\"icon_GTRI\" src=\"./icon_GTRI.png\"></img>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.galapagos.gob.ec/en/national-park/\">\n              <img alt=\"icon_PN\" src=\"./icon_PNG.png\"></img>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.galapagos.org/\">\n              <img alt=\"icon_GC\" src=\"./icon_GC.png\"></img>\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport IconRow from './components/IconRow'\n\ninterface AboutProps {\n  domainlang: string\n  markdown_en?: string\n  markdown_sp?: string\n}\n\ninterface AboutState {\n  domainlang?: string\n  markdown_en: any\n  markdown_sp: any\n}\n\nexport default class About extends React.Component<AboutProps, AboutState> {\n\n  constructor(props: Readonly<AboutProps>){\n\n    super(props)\n    this.state = {\n      domainlang: this.props.domainlang,\n      markdown_en: '',\n      markdown_sp: ''\n    };\n\n  }\n\n  shouldComponentUpdate(nextProps: Readonly<AboutProps>, nextState: Readonly<AboutState>) {\n\n    if (this.props.domainlang !== nextProps.domainlang || (this.state.markdown_en == '' && nextState.markdown_en != '')) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  componentWillReceiveProps(nextProps: Readonly<AboutProps>) {\n    this.setState({ domainlang: nextProps.domainlang });\n  }\n\n  getMdDocuments = function (this: any) {\n\n    fetch('./about_text_sp.md').then(res => res.text()).then(text => this.setState({ markdown_sp: text }));\n\n    fetch('./about_text_en.md').then(res => res.text()).then(text => this.setState({ markdown_en: text }));\n\n  }\n\n  //need to get text to wait until promise has resolved - loading until\n  render() {\n\n        if (this.state.markdown_en == ''){\n          this.getMdDocuments()\n        }\n\n        const { markdown_en } = this.state;\n        const { markdown_sp } = this.state;\n\n        if (this.props.domainlang == 'SP'){\n          return(\n            <div className = \"aboutcontainer\">\n              <ReactMarkdown source = { markdown_sp }/>\n              <IconRow/>\n              <p>Sitio web por Hamish Gibbs. Para informar un problema con este sitio, visite la página de <a href=\"https://github.com/hamishgibbs/espanola_tortoise_release/issues/new\">GitHub</a>.</p>\n            </div>\n          );\n        }else{\n          return(\n          <div className = \"aboutcontainer\">\n            <ReactMarkdown source = { markdown_en }/>\n            <IconRow/>\n            <p>Website by Hamish Gibbs. To report a problem with this site, visit the <a href=\"https://github.com/hamishgibbs/espanola_tortoise_release/issues/new\">GitHub</a> page.</p>\n          </div>\n          );\n        }\n    }\n}\n","export default function getColour(id: string, color_ref: any): undefined|string{\n\n    color_ref = color_ref.filter(function(item: any) {\n\n      return item[0].id == id;\n    });\n\n    return(color_ref[0][0].color);\n};\n","import * as React from \"react\";\n\nimport * as d3 from 'd3'\n\nimport getColour from './utils'\n\nimport lengthdata from '../json/length_summary.json'\nimport color_ref from '../json/color_ref.json'\n\nimport styles from './BarChart.module.css'\n\ninterface BCProps {\n  width: number,\n  height: number,\n  domainlang: string\n}\n\nexport default class BarChart extends React.Component<BCProps, {}> {\n\n  private ref = React.createRef<SVGSVGElement>()\n\n  componentDidMount() {\n\n    //@ts-ignore\n    var containerelement: HTMLElement = d3.select('.' + styles.barchartcontainer).node()\n    var containerdims: DOMRect = containerelement.getBoundingClientRect()\n\n    var margin = {top: 20, right: 20, bottom: 40, left: 90},\n        width = containerdims.width - margin.left - margin.right,\n        height = containerdims.height - margin.top - margin.bottom;\n\n    var svg = d3.select(this.ref.current)\n\n    this.createBarChart(lengthdata, svg, margin, height, width)\n    this.addAxisTitles(svg, margin, height, width, this.props.domainlang)\n\n  }\n\n  componentDidUpdate() {\n\n    //@ts-ignore\n    var containerelement: HTMLElement = d3.select('.' + styles.barchartcontainer).node()\n    var containerdims: DOMRect = containerelement.getBoundingClientRect()\n\n    var margin = {top: 20, right: 20, bottom: 40, left: 90},\n        width = containerdims.width - margin.left - margin.right,\n        height = containerdims.height - margin.top - margin.bottom;\n\n    var svg = d3.select(this.ref.current)\n\n    this.createBarChart(lengthdata, svg, margin, height, width)\n    this.addAxisTitles(svg, margin, height, width, this.props.domainlang)\n\n  }\n\n  addAxisTitles(svg: any, margin: any, height: number, width: number, domainlang: string) {\n\n    console.log(0 - (margin.left - 5))\n\n    d3.selectAll('.charttitle').remove()\n\n    if(domainlang == 'SP'){\n      svg.append(\"text\")\n        .attr('class', 'charttitle')\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 0 - (margin.left - 90))\n        .attr(\"x\",0 - (height / 2))\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Tortuga\");\n\n      svg.append(\"text\")\n        .attr('class', 'charttitle')\n        .attr(\"transform\",\n              \"translate(\" + (width/2) + \" ,\" +\n                             (height + margin.top + 40) + \")\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Distancia (km)\");\n    }else{\n      svg.append(\"text\")\n        .attr('class', 'charttitle')\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 0 - (margin.left - 90))\n        .attr(\"x\",0 - (height / 2))\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Tortoise\");\n\n      svg.append(\"text\")\n        .attr('class', 'charttitle')\n        .attr(\"transform\",\n              \"translate(\" + (width/2) + \" ,\" +\n                             (height + margin.top + 40) + \")\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Distance (km)\");\n    }\n\n\n  }\n\n  createBarChart(lengthdata: any, svg: any, margin: any, height: number, width: number){\n    var y = d3.scaleBand()\n          .range([height, 0])\n          .padding(0.1);\n\n    var x = d3.scaleLinear()\n          .range([0, width]);\n\n    //@ts-ignore\n    svg = svg\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    //@ts-ignore\n    x.domain([0, d3.max(lengthdata, function(d: any){ return d.length; })])\n    y.domain(lengthdata.map(function(d: any) { return d.id; }));\n\n    svg.selectAll(\".bar\")\n      .data(lengthdata)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      //@ts-ignore\n      .attr(\"y\", function(d) { return y(d.id); })\n      //@ts-ignore\n      .attr(\"id\", function(d) { return y(d.id); })\n      .attr(\"width\", function(d: any) {return 0; } )\n      .transition()\n      .duration(750)\n      .delay(function (d: any, i: any) {\n                    return i * 12;\n                })\n      .attr(\"width\", function(d: any) {return x(d.length); } )\n      .attr(\"height\", y.bandwidth())\n      //@ts-ignore\n      .attr(\"fill\", function(d) { return getColour(d.id, color_ref); })\n\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(d3.axisLeft(y))\n\n  }\n\n  render() {\n\n    return(\n      <div className = { styles.barchartcontainer }>\n        <svg ref={this.ref}/>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport BarChart from './components/BarChart'\n\ninterface DataProps {\n  domainlang: string\n}\n\nexport default class Data extends React.Component<DataProps, {}> {\n  render() {\n    //<p>Site updated + {updatetime[0].time} </p>\n    return(\n      <div>\n        <BarChart domainlang = { this.props.domainlang } width = { 500 } height = { 500 }/>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Map, Polyline, CircleMarker, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon, GeoJSON } from \"leaflet\";\nimport getColour from './utils'\n\nimport color_ref from '../json/color_ref.json'\nimport line_data from '../json/lines.json'\nimport recent_points from '../json/most_recent_points.json'\n\nimport Header from './Header'\n\nimport styles from './MapContainer.module.css'\n\nexport default class MapContainer extends React.Component<{}, {}> {\n\n  adjustGeoJSON = function(feature: any): any{\n\n      var lng: Array<number> = feature.geometry.coordinates.map(function(item: any){return(Math.min.apply(null, item))})\n      var lat: Array<number> = feature.geometry.coordinates.map(function(item: any){return(Math.max.apply(null, item))})\n\n      var coords: any = []\n      var i;\n      for (i = 0; i < lng.length; i++) {\n        coords[i] = [lat[i], lng[i]]\n      }\n\n      feature.geometry.coordinates = coords\n\n      return(feature)\n  //}else{\n  //  return(feature)\n  //}\n\n  }\n\n\n  render() {\n\n    //adjust coordinates of line data\n    line_data.features.map(this.adjustGeoJSON)\n\n    return(\n      <Map center={[-1.371844, -89.685379]} zoom={14} zoomControl={ false }>\n        <TileLayer\n          url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        { line_data.features.map((line: any) => (\n          <Polyline key = { line.properties.id } positions = { line.geometry.coordinates }\n          color = { getColour(line.properties.id, color_ref) }\n          onMouseOver={(e: any) => { e.target.openPopup(); }}\n          onMouseOut={(e: any) => {e.target.closePopup();}}>\n            <Popup>{ line.properties.id }</Popup>\n          </Polyline>\n        )) }\n        { recent_points.map((point: any) => (\n          <CircleMarker center = { [point.lat, point.lng] } radius = { 4 } stroke = { false }\n          fill = { true } fillColor = \"#00872E\" fillOpacity = { 0.5 }\n          onMouseOver={(e: any) => { e.target.openPopup();}}\n          onMouseOut={(e: any) => {e.target.closePopup();}}>\n            <Popup>{ point.summary }</Popup>\n          </CircleMarker>\n        ))}\n      </Map>\n    );\n  }\n}\n","import * as React from \"react\";\nimport MapContainer from './components/MapContainer'\n\nexport default class Home extends React.Component<{}> {\n  render() {\n      return(\n          <div>\n            <MapContainer/>\n          </div>\n      );\n    };\n}\n","import * as React from \"react\";\nimport * as d3 from 'd3'\n\nimport styles from './TimelinePanel.module.css'\n\nimport events from '../json/events.json'\n\ninterface TPProps {\n  focus: string\n  domainlang: string\n}\n\nexport default class Timeline extends React.Component<TPProps, {}> {\n  private ref = React.createRef<SVGSVGElement>()\n\n  defineEventData(focus: string){\n    var events_filter: any = events.filter(function (i: any,n: any){\n        return(i.id===focus);\n    });\n\n    return(events_filter)\n\n  }\n\n  //define prelim plot here and move to componentWillReceiveProps/componentWillUpdate\n  componentDidMount() {\n    var svg = this.ref.current\n\n    //@ts-ignore\n    var containerelement: HTMLElement = d3.select(svg).node()\n    var containerdims: DOMRect = containerelement.getBoundingClientRect()\n\n    var eventdata = this.defineEventData(this.props.focus)\n\n    this.constructPlot(this.props.domainlang, svg, containerdims, eventdata, this.constructLine, this.constructPoints, this.constructTraceLine, this.getTraceLineData, this.placeTextAnnotation, this.placeTextTitle)\n\n  }\n\n  componentDidUpdate() {\n\n    var svg = this.ref.current\n\n    d3.select(this.ref.current).selectAll('g').remove()\n\n    //@ts-ignore\n    var containerelement: HTMLElement = d3.select(svg).node()\n    var containerdims: DOMRect = containerelement.getBoundingClientRect()\n\n    var eventdata = this.defineEventData(this.props.focus)\n\n    this.constructPlot(this.props.domainlang, svg, containerdims, eventdata, this.constructLine, this.constructPoints, this.constructTraceLine, this.getTraceLineData, this.placeTextAnnotation, this.placeTextTitle)\n\n  }\n\n  constructPlot(domainlang: string, svg: any, containerdims:any, eventdata: any, constructLine: object, constructPoints: object, constructTraceLine: object, getTraceLineData: object, placeTextAnnotation: object, placeTextTitle: object){\n\n    var totaldistance = Math.max.apply(Math, eventdata.map(function(x: any){return(x.distance);}))\n\n    var relative_distance = eventdata.map(function(x: any){return(x.distance / totaldistance);})\n\n    var plot_extent = {\n      min_x: containerdims.width * 0.05,\n      max_x: containerdims.width * 0.95\n    }\n\n    //need non-cumulative distance also\n    var animation_duration = 3000\n\n    var timings = relative_distance.map(function(x: any){return(x * animation_duration);})\n\n    relative_distance = relative_distance.map(function(x: any){return((containerdims.width * 0.05) + (x * (containerdims.width * 0.9)));})\n\n    //@ts-ignore\n    constructLine(svg, containerdims, plot_extent, eventdata, animation_duration)\n\n\n    //@ts-ignore\n    placeTextTitle(svg, plot_extent, eventdata)\n\n    //for loop here to time all in relation to top line\n    //add text anotation - transition opacity]\n    //add dotted line\n    //add timeout with the correct timings\n    var i;\n    for (let i = 0; i < relative_distance.length; i++) {\n      setTimeout(() => {\n        //@ts-ignore\n        var linedata = getTraceLineData(relative_distance[i], i, plot_extent)\n\n        //@ts-ignore\n        constructPoints(svg, containerdims, relative_distance[i])\n\n        //@ts-ignore\n        constructTraceLine(svg, containerdims, relative_distance, linedata)\n\n        //@ts-ignore\n        placeTextAnnotation(svg, plot_extent, eventdata, i, 2000, domainlang)\n      }, timings[i]);\n\n    }\n\n    //@ts-ignore\n    //constructTraceLine(svg, containerdims, relative_distance, linedata)\n\n  }\n\n  placeTextTitle(svg: any, plot_extent: any, eventdata: any){\n    d3.select(svg)\n      .append('g')\n      .append('text')\n      .attr('y', 60)\n      .attr('x', plot_extent['max_x'] / 2)\n      .text(eventdata[0].id)\n      .attr('opacity', 0)\n      .attr('font-size', '25px')\n      .attr('font-weight', 'bold')\n      .transition()\n      .duration(500)\n      .attr('opacity', 1);\n  }\n\n  placeTextAnnotation(svg: any, plot_extent: any, eventdata: any, n: number, delay: number, domainlang: string){\n    function timeConverter(UNIX_timestamp: number){\n      var a = new Date(UNIX_timestamp * 1000);\n      var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n      var year = a.getFullYear();\n      var month = months[a.getMonth()];\n      var date = a.getDate();\n      var hour = a.getHours();\n      var min = a.getMinutes();\n      var sec = a.getSeconds();\n      var time = date + ' ' + month + ', ' + year + ' ' + hour.toString().padStart(2, '0') + ':' + min.toString().padStart(2, '0');\n      return time;\n    }\n\n    if (domainlang === 'SP'){\n        var text_annotation = timeConverter(eventdata[n].dt_unix) + ' – viajó ' + eventdata[n].distance_text + '.'\n    }else{\n        var text_annotation = timeConverter(eventdata[n].dt_unix) + ' – travelled ' + eventdata[n].distance_text + '.'\n    }\n\n    d3.select(svg)\n      .append('g')\n      .append('text')\n      .attr('y', 255 + (n + 1) * 40)\n      .attr('x', plot_extent['min_x'] + 30)\n      .attr('font-size', '12px')\n      .text(text_annotation)\n      .attr('opacity', 0)\n      .transition()\n      .duration(500)\n      .delay(delay)\n      .attr('opacity', 1);\n\n  }\n\n  constructPoints(svg: any, containerdims: any, relative_point: number){\n    d3.select(svg)\n      .append('g')\n      .append(\"circle\")\n       .attr(\"cx\", relative_point)\n       .attr(\"cy\", 150)\n       .attr(\"r\", 0)\n       .style(\"fill\", \"white\")\n       .attr(\"stroke\", \"black\")\n       .attr(\"stroke-width\", 1)\n      .transition()\n      .duration(400)\n      .attr('r', 5);\n  }\n\n  constructLine(svg: any, containerdims: any, plot_extent: any, eventdata: any, animation_duration: number){\n\n    d3.select(svg)\n      .append('g')\n       .append(\"line\")\n       .attr(\"y1\", 150)\n       .attr(\"x1\", plot_extent['min_x'])\n       .attr(\"x2\", plot_extent['min_x'])\n       .attr(\"y2\", 150)\n       .attr(\"fill\", \"none\")\n       .attr(\"stroke\", \"black\")\n       .attr(\"stroke-width\", 2)\n       .transition()\n       .duration(animation_duration)\n       .ease(d3.easeLinear)\n       .attr(\"x2\", plot_extent['max_x']);\n\n  }\n\n  getTraceLineData(relative_point: any, n: number, plot_extent: any){\n\n    var text_space = 40\n\n    var linedata = [[relative_point, 160], [relative_point, 250], [plot_extent['min_x'], 250], [plot_extent['min_x'], 250 + (n + 1) * text_space], [plot_extent['min_x'] + 15, 250 + (n + 1) * text_space]]\n    return(linedata);\n\n  }\n\n  constructTraceLine(svg: any, containerdims: any, plot_extent: any, linedata: any){\n\n    var path = d3.select(svg).append('g')\n      .append(\"path\")\n      .datum(linedata)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"lightgrey\")\n      .attr(\"stroke-width\", 1)\n      //@ts-ignore\n      .attr(\"d\", d3.line()\n        .x(function(d) { return d[0] })\n        .y(function(d) { return d[1] })\n        )\n\n\n    //@ts-ignore\n    var totalLength = path.node().getTotalLength();\n\n    path\n      .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n      .attr(\"stroke-dashoffset\", totalLength)\n      .transition()\n        .duration(2000)\n        .ease(d3.easeLinear)\n        .attr(\"stroke-dashoffset\", 0);\n\n  }\n\n  render(){\n\n    var focus = this.props.focus\n\n    var eventdata = this.defineEventData(this.props.focus)\n\n    var n: number = eventdata.length\n\n    return(\n      <div className={ styles.panelcontainer } style={{ height: 250 + (n * 50) }}>\n        <svg className={ styles.svgelement } ref={this.ref}/>\n      </div>\n    )\n  }\n}\n","import * as React from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport TimelinePanel from './components/TimelinePanel'\n\nimport linedata from './json/lines.json'\n\nimport styles from './Timeline.module.css'\n\ninterface TimelineProps {\n  domainlang: string\n}\n\ninterface TimelineState {\n  focus: string\n}\n\nexport default class Timeline extends React.Component<TimelineProps, TimelineState> {\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      focus: this.defineMenuItems()[0]\n    };\n\n    this.handler = this.handler.bind(this)\n\n  }\n\n  defineMenuItems = function(): Array<string> {\n    return(linedata.features.map(function(x){return(x.properties.id);}));\n  }\n\n  handler(e: any) {\n\n    this.setState({\n      focus: e.value\n    })\n\n  }\n\n  render () {\n\n    if ( this.props.domainlang === 'SP'){\n      return(\n        <div className= { styles.timelinecontainer }>\n          <div className={ styles.menucontainer }>\n            <Dropdown options = { this.defineMenuItems() } onChange={ this.handler } placeholder=\"Selección\"/>\n          </div>\n          <TimelinePanel focus={ this.state.focus } domainlang={ this.props.domainlang }/>\n        </div>\n      )\n    }else{\n      return(\n        <div className= { styles.timelinecontainer }>\n          <div className={ styles.menucontainer }>\n            <Dropdown options = { this.defineMenuItems() } onChange={ this.handler } placeholder=\"Selection\"/>\n          </div>\n          <TimelinePanel focus={ this.state.focus } domainlang={ this.props.domainlang }/>\n        </div>\n      )\n    }\n\n  }\n}\n","import * as React from \"react\";\nimport styles from './Header.module.css'\nimport ToggleLanguage from './ToggleLanguage';\nimport App from '../App'\nimport About from '../About'\nimport Data from '../Data'\nimport Home from '../Home'\nimport Timeline from '../Timeline'\n\nimport {\n  BrowserRouter,\n  HashRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\ntype HeaderProps = {\n  domainlang: string\n\ttogglelanguage: object\n}\n\nexport default class Header extends React.Component<HeaderProps> {\n\n\trender() {\n\n\t\t\t\tif (this.props.domainlang == 'SP'){\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div>\n              <HashRouter>\n\t\t\t\t\t\t\t<div>\n                <div>\n\t\t\t\t\t\t\t\t<nav>\n\t\t\t\t\t\t\t\t\t<ul className={ styles.pageheader }>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/\">Las Tortugas</Link>\n\t\t\t\t\t\t\t\t\t</li>\n                  <li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/data\">Data</Link>\n\t\t\t\t\t\t\t\t\t</li>\n                  <li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/timeline\">Cronograma</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/about\">Información</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li><ToggleLanguage togglelanguage = { this.props.togglelanguage }/></li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</nav>\n                </div>\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t\t\t<Home/>\n\t\t\t\t\t\t\t\t\t</Route>\n                  <Route exact path=\"/data\">\n\t\t\t\t\t\t\t\t\t\t<Data domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n                  <Route exact path=\"/timeline\">\n\t\t\t\t\t\t\t\t\t\t<Timeline domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/about\">\n\t\t\t\t\t\t\t\t\t\t<About domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</div>\n              </HashRouter>\n\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}else{\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n              <HashRouter>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<nav>\n\t\t\t\t\t\t\t\t\t<ul className={styles.pageheader}>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/\">The Tortoises</Link>\n\t\t\t\t\t\t\t\t\t</li>\n                  <li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/data\">Data</Link>\n\t\t\t\t\t\t\t\t\t</li>\n                  <li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/timeline\">Timeline</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/about\">About</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li><ToggleLanguage togglelanguage = { this.props.togglelanguage }/></li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t\t\t<Home/>\n\t\t\t\t\t\t\t\t\t</Route>\n                  <Route exact path=\"/data\">\n                    <Data domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n                  <Route exact path=\"/timeline\">\n\t\t\t\t\t\t\t\t\t\t<Timeline domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route exact path=\"/about\">\n\t\t\t\t\t\t\t\t\t\t<About domainlang = { this.props.domainlang }/>\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</div>\n            </HashRouter>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport About from './About'\n\n//Add routing\ntype DomainState = {\n  domainlang: string\n}\n\nexport default class App extends React.Component {\n\n  state = { domainlang: 'EN' }\n\n  toggleLanguage = function(this: any, lang: string): void {\n\n    if(lang == 'SP'){\n      lang = 'SP'\n    }else{\n      lang = 'EN'\n    }\n\n    this.setState({\n      domainlang: lang\n    })\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header domainlang = { this.state.domainlang } togglelanguage = { this.toggleLanguage.bind(this) }/>\n      </div>\n    );\n  }\n}\n\n\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timelinecontainer\":\"Timeline_timelinecontainer__19GBO\",\"menucontainer\":\"Timeline_menucontainer__1-pe6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barchartcontainer\":\"BarChart_barchartcontainer__3BwQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagecontainer\":\"Header_pagecontainer__1RbSp\",\"pageheader\":\"Header_pageheader__2qM6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelcontainer\":\"TimelinePanel_panelcontainer__2DOPW\",\"svgelement\":\"TimelinePanel_svgelement__2NaND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconrow_container\":\"IconRow_iconrow_container__3EDw6\"};"],"sourceRoot":""}